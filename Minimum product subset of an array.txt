//Minimum product subset of an array

#include<stdio.h>
#include<limits.h>

int max(int num1,int num2)
{
    return (num1>num2)?num1:num2;
}
 
int min(int num1,int num2)
{
    return (num1>num2)?num2:num1;
}
 
int minProductSubset(int arr[], int n)
{
    if (n==1)
        return arr[0];
    int max_neg=INT_MIN,min_pos=INT_MAX,count_neg=0,count_zero=0,prod=1;
    for (int i=0;i<n;i++)
    {
        if(arr[i]==0)
        {
            count_zero++;
            continue;
        }
        if (arr[i]<0)
        {
            count_neg++;
            max_neg = max(max_neg,arr[i]);
        }
        if (arr[i]>0)
            min_pos=min(min_pos,arr[i]);
        prod=prod*arr[i];
    }
    if (count_zero==n||(count_neg==0&&count_zero>0))
        return 0;
    if (count_neg==0)
        return min_pos;
    if (!(count_neg&1)&&count_neg!=0)
        prod=prod/max_neg;
    return prod;
}
 
int main()
{
    int n;
    scanf("%d",&n);
    int arr[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("%d", minProductSubset(arr,n));
    return 0;
}